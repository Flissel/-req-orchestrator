# FastAPI Requirements Engineering System - Multi-Stage Build
FROM python:3.11-slim as base

# System Dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Working Directory
WORKDIR /app

# Python Environment
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app

# Development Stage
FROM base as development

# Install Development Dependencies
COPY requirements_fastapi.txt .
RUN pip install --no-cache-dir -r requirements_fastapi.txt

# Copy Source Code
COPY . .

# Development Server
CMD ["python", "start_fastapi.py", "--host", "0.0.0.0", "--port", "8000"]

# Production Stage
FROM base as production

# Create App User
RUN useradd --create-home --shell /bin/bash app

# Install Production Dependencies Only
COPY requirements_fastapi.txt .
RUN pip install --no-cache-dir -r requirements_fastapi.txt && \
    pip install gunicorn[gthread] && \
    rm -rf /root/.cache/pip

# Copy Application
COPY --chown=app:app . .

# Create Data Directory
RUN mkdir -p /app/data && chown app:app /app/data

# Switch to App User
USER app

# Health Check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Production Server
CMD ["uvicorn", "fastapi_main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]

# Worker Stage (f√ºr gRPC Workers)
FROM base as worker

# Install Dependencies
COPY requirements_fastapi.txt .
RUN pip install --no-cache-dir -r requirements_fastapi.txt

# Copy Source Code
COPY . .

# Worker Startup Script
COPY worker_startup.py .
CMD ["python", "worker_startup.py"]
